=============================
The ``2-matrix_divided`` module
=============================

Using ``matrix_divided``
---------------------

Import the function:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now test it:


correct cases

    >>> matrix_divided([[2, 4, 6], [4, 6, 8]], 2)
    [[1.0, 2.0, 3.0], [2.0, 3.0, 4.0]]

    >>> matrix_divided([[2, 4], [8, 10]], -2)
    [[-1.0, -2.0], [-4.0, -5.0]]

    >>> matrix_divided([[1, 1], [2, 2]], float('inf'))
    [[0.0, 0.0], [0.0, 0.0]]

    >>> matrix = [[1, 2, 3]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0]]

error cases

    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

    >>> matrix_divided([["Hello", "Mouse"], [2, 2]], 2)
    Traceback (most recent call last):
    TypeError: Matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 1, 1], [2, 2]], 5)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[1, 1], [2, 2]], "Hello")
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided("Hello", 9)
    Traceback (most recent call last):
    TypeError: Matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 1], [2, 2]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> matrix_divided([[1, 3]])
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'
